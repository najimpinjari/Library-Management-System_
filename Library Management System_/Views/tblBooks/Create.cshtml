@model Library_Management_System_.Models.tblBook

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<link href="~/Content/Site.css" rel="stylesheet" />

<style>
    .form-horizontal {
        max-width: 800px;
        margin: auto;
    }

    .control-label {
        font-weight: bold;
    }

    .form-control {
        border-radius: 5px;
        box-shadow: none;
    }

    .btn-default {
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        padding: 8px 15px;
        cursor: pointer;
    }

        .btn-default:hover {
            background-color: #0056b3;
        }

    .text-danger {
        color: #dc3545;
    }
</style>
<link href="~/Content/StyleSheet1.css" rel="stylesheet" />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>tblBook</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryType, "Category", htmlAttributes: new { @class = "control-label" })
            @Html.DropDownList("CategoryType", null, "-- Select Category --", htmlAttributes: new { @class = "form-control", @id = "CategoryType" })
            @Html.ValidationMessageFor(model => model.CategoryType, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AuthorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AuthorName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AuthorName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublicationName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublicationName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PublicationName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-danger" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    $(document).ready(function () {
        $('#ISBN').focusout(function () {
            let isbn = $(this).val();
            let category = $('#CategoryType').val();

            // Validate ISBN format
            let isbnRegex = /^[0-9]{3}-[0-9]{2}-[0-9]{5}-[0-9]{2}-[0-9]$/;
            if (!isbnRegex.test(isbn)) {
                alert("Invalid ISBN format. Example: 978-92-95055-02-5");
                $(this).val('');
            }

            // Additional check for Horror category
            if (category === "Horror" && !isbn.startsWith("978")) {
                alert("ISBN for Horror books must start with 978.");
                $(this).val('');
            }
        });
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
